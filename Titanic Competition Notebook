{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "ef0c0da0",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-09-21T19:38:58.281689Z",
     "iopub.status.busy": "2025-09-21T19:38:58.281413Z",
     "iopub.status.idle": "2025-09-21T19:39:00.010333Z",
     "shell.execute_reply": "2025-09-21T19:39:00.009367Z"
    },
    "papermill": {
     "duration": 1.735269,
     "end_time": "2025-09-21T19:39:00.011779",
     "exception": false,
     "start_time": "2025-09-21T19:38:58.276510",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/titanic/train.csv\n",
      "/kaggle/input/titanic/test.csv\n",
      "/kaggle/input/titanic/gender_submission.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fef9e37b",
   "metadata": {
    "papermill": {
     "duration": 0.002989,
     "end_time": "2025-09-21T19:39:00.018606",
     "exception": false,
     "start_time": "2025-09-21T19:39:00.015617",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Import modules"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "da33dd7d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-21T19:39:00.026132Z",
     "iopub.status.busy": "2025-09-21T19:39:00.025684Z",
     "iopub.status.idle": "2025-09-21T19:39:03.712850Z",
     "shell.execute_reply": "2025-09-21T19:39:03.711902Z"
    },
    "papermill": {
     "duration": 3.692742,
     "end_time": "2025-09-21T19:39:03.714587",
     "exception": false,
     "start_time": "2025-09-21T19:39:00.021845",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# full\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "import statsmodels.api as sm\n",
    "import warnings\n",
    "\n",
    "# partial\n",
    "from sklearn.metrics import confusion_matrix\n",
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "# warnings\n",
    "warnings.filterwarnings(\"ignore\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "4780073f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-21T19:39:03.723140Z",
     "iopub.status.busy": "2025-09-21T19:39:03.722046Z",
     "iopub.status.idle": "2025-09-21T19:39:03.747998Z",
     "shell.execute_reply": "2025-09-21T19:39:03.747327Z"
    },
    "papermill": {
     "duration": 0.031747,
     "end_time": "2025-09-21T19:39:03.749803",
     "exception": false,
     "start_time": "2025-09-21T19:39:03.718056",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df = pd.read_csv(\"/kaggle/input/titanic/train.csv\")\n",
    "df[\"Sex\"] = df[\"Sex\"].map({\"male\":1, \"female\":0})\n",
    "df[\"Age\"] = df[\"Age\"].fillna(df[\"Age\"].mean().round(0))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "6095d39c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-21T19:39:03.756693Z",
     "iopub.status.busy": "2025-09-21T19:39:03.756444Z",
     "iopub.status.idle": "2025-09-21T19:39:03.821034Z",
     "shell.execute_reply": "2025-09-21T19:39:03.820174Z"
    },
    "papermill": {
     "duration": 0.069627,
     "end_time": "2025-09-21T19:39:03.822468",
     "exception": false,
     "start_time": "2025-09-21T19:39:03.752841",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 891 entries, 0 to 890\n",
      "Data columns (total 12 columns):\n",
      " #   Column       Non-Null Count  Dtype  \n",
      "---  ------       --------------  -----  \n",
      " 0   PassengerId  891 non-null    int64  \n",
      " 1   Survived     891 non-null    int64  \n",
      " 2   Pclass       891 non-null    int64  \n",
      " 3   Name         891 non-null    object \n",
      " 4   Sex          891 non-null    int64  \n",
      " 5   Age          891 non-null    float64\n",
      " 6   SibSp        891 non-null    int64  \n",
      " 7   Parch        891 non-null    int64  \n",
      " 8   Ticket       891 non-null    object \n",
      " 9   Fare         891 non-null    float64\n",
      " 10  Cabin        204 non-null    object \n",
      " 11  Embarked     889 non-null    object \n",
      "dtypes: float64(2), int64(6), object(4)\n",
      "memory usage: 83.7+ KB\n",
      "None\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>891</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>891</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>204</td>\n",
       "      <td>889</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>unique</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>891</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>681</td>\n",
       "      <td>NaN</td>\n",
       "      <td>147</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>top</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Braund, Mr. Owen Harris</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>347082</td>\n",
       "      <td>NaN</td>\n",
       "      <td>B96 B98</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>freq</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4</td>\n",
       "      <td>644</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>446.000000</td>\n",
       "      <td>0.383838</td>\n",
       "      <td>2.308642</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.647587</td>\n",
       "      <td>29.758889</td>\n",
       "      <td>0.523008</td>\n",
       "      <td>0.381594</td>\n",
       "      <td>NaN</td>\n",
       "      <td>32.204208</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>257.353842</td>\n",
       "      <td>0.486592</td>\n",
       "      <td>0.836071</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.477990</td>\n",
       "      <td>13.002570</td>\n",
       "      <td>1.102743</td>\n",
       "      <td>0.806057</td>\n",
       "      <td>NaN</td>\n",
       "      <td>49.693429</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.420000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>223.500000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>22.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7.910400</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>446.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>30.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>14.454200</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>668.500000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>35.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>31.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>891.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>80.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>512.329200</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        PassengerId    Survived      Pclass                     Name  \\\n",
       "count    891.000000  891.000000  891.000000                      891   \n",
       "unique          NaN         NaN         NaN                      891   \n",
       "top             NaN         NaN         NaN  Braund, Mr. Owen Harris   \n",
       "freq            NaN         NaN         NaN                        1   \n",
       "mean     446.000000    0.383838    2.308642                      NaN   \n",
       "std      257.353842    0.486592    0.836071                      NaN   \n",
       "min        1.000000    0.000000    1.000000                      NaN   \n",
       "25%      223.500000    0.000000    2.000000                      NaN   \n",
       "50%      446.000000    0.000000    3.000000                      NaN   \n",
       "75%      668.500000    1.000000    3.000000                      NaN   \n",
       "max      891.000000    1.000000    3.000000                      NaN   \n",
       "\n",
       "               Sex         Age       SibSp       Parch  Ticket        Fare  \\\n",
       "count   891.000000  891.000000  891.000000  891.000000     891  891.000000   \n",
       "unique         NaN         NaN         NaN         NaN     681         NaN   \n",
       "top            NaN         NaN         NaN         NaN  347082         NaN   \n",
       "freq           NaN         NaN         NaN         NaN       7         NaN   \n",
       "mean      0.647587   29.758889    0.523008    0.381594     NaN   32.204208   \n",
       "std       0.477990   13.002570    1.102743    0.806057     NaN   49.693429   \n",
       "min       0.000000    0.420000    0.000000    0.000000     NaN    0.000000   \n",
       "25%       0.000000   22.000000    0.000000    0.000000     NaN    7.910400   \n",
       "50%       1.000000   30.000000    0.000000    0.000000     NaN   14.454200   \n",
       "75%       1.000000   35.000000    1.000000    0.000000     NaN   31.000000   \n",
       "max       1.000000   80.000000    8.000000    6.000000     NaN  512.329200   \n",
       "\n",
       "          Cabin Embarked  \n",
       "count       204      889  \n",
       "unique      147        3  \n",
       "top     B96 B98        S  \n",
       "freq          4      644  \n",
       "mean        NaN      NaN  \n",
       "std         NaN      NaN  \n",
       "min         NaN      NaN  \n",
       "25%         NaN      NaN  \n",
       "50%         NaN      NaN  \n",
       "75%         NaN      NaN  \n",
       "max         NaN      NaN  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(df.info())\n",
    "df.describe(include='all')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "6f9fdf9a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-21T19:39:03.829928Z",
     "iopub.status.busy": "2025-09-21T19:39:03.829691Z",
     "iopub.status.idle": "2025-09-21T19:39:03.837472Z",
     "shell.execute_reply": "2025-09-21T19:39:03.836593Z"
    },
    "papermill": {
     "duration": 0.01287,
     "end_time": "2025-09-21T19:39:03.838778",
     "exception": false,
     "start_time": "2025-09-21T19:39:03.825908",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['Pclass', 'Sex', 'Age', 'Fare']"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_cleaned = df.drop(['PassengerId', 'SibSp', 'Name', 'Parch', 'Ticket', 'Cabin', 'Embarked'], axis=1)\n",
    "features = ['Pclass', 'Sex', 'Age', 'Fare']\n",
    "features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "7b05886b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-21T19:39:03.846558Z",
     "iopub.status.busy": "2025-09-21T19:39:03.846324Z",
     "iopub.status.idle": "2025-09-21T19:39:04.635196Z",
     "shell.execute_reply": "2025-09-21T19:39:04.634300Z"
    },
    "papermill": {
     "duration": 0.794165,
     "end_time": "2025-09-21T19:39:04.636437",
     "exception": false,
     "start_time": "2025-09-21T19:39:03.842272",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "for feature in features:\n",
    "    sns.histplot(df, x=feature)\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "2c6106e9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-21T19:39:04.646346Z",
     "iopub.status.busy": "2025-09-21T19:39:04.646110Z",
     "iopub.status.idle": "2025-09-21T19:39:05.021316Z",
     "shell.execute_reply": "2025-09-21T19:39:05.020449Z"
    },
    "papermill": {
     "duration": 0.381652,
     "end_time": "2025-09-21T19:39:05.022713",
     "exception": false,
     "start_time": "2025-09-21T19:39:04.641061",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: >"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.heatmap(df_cleaned.corr(), cmap=\"YlGnBu\", annot=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "0c10464e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-21T19:39:05.034101Z",
     "iopub.status.busy": "2025-09-21T19:39:05.033777Z",
     "iopub.status.idle": "2025-09-21T19:39:05.044892Z",
     "shell.execute_reply": "2025-09-21T19:39:05.044052Z"
    },
    "papermill": {
     "duration": 0.018359,
     "end_time": "2025-09-21T19:39:05.046550",
     "exception": false,
     "start_time": "2025-09-21T19:39:05.028191",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "y = df_cleaned[\"Survived\"]\n",
    "X = sm.add_constant(df_cleaned[features])\n",
    "\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "df983dc4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-21T19:39:05.057390Z",
     "iopub.status.busy": "2025-09-21T19:39:05.057099Z",
     "iopub.status.idle": "2025-09-21T19:39:05.130527Z",
     "shell.execute_reply": "2025-09-21T19:39:05.129558Z"
    },
    "papermill": {
     "duration": 0.080217,
     "end_time": "2025-09-21T19:39:05.131813",
     "exception": false,
     "start_time": "2025-09-21T19:39:05.051596",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Optimization terminated successfully.\n",
      "         Current function value: 0.460474\n",
      "         Iterations 6\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>Logit Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>       <td>Survived</td>     <th>  No. Observations:  </th>  <td>   801</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                 <td>Logit</td>      <th>  Df Residuals:      </th>  <td>   796</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>                 <td>MLE</td>       <th>  Df Model:          </th>  <td>     4</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>            <td>Sun, 21 Sep 2025</td> <th>  Pseudo R-squ.:     </th>  <td>0.3076</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                <td>19:39:05</td>     <th>  Log-Likelihood:    </th> <td> -368.84</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>converged:</th>             <td>True</td>       <th>  LL-Null:           </th> <td> -532.70</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>     <td>nonrobust</td>    <th>  LLR p-value:       </th> <td>1.129e-69</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "     <td></td>       <th>coef</th>     <th>std err</th>      <th>z</th>      <th>P>|z|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th>  <td>    4.4221</td> <td>    0.526</td> <td>    8.412</td> <td> 0.000</td> <td>    3.392</td> <td>    5.452</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Pclass</th> <td>   -1.1063</td> <td>    0.141</td> <td>   -7.855</td> <td> 0.000</td> <td>   -1.382</td> <td>   -0.830</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Sex</th>    <td>   -2.5587</td> <td>    0.195</td> <td>  -13.092</td> <td> 0.000</td> <td>   -2.942</td> <td>   -2.176</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Age</th>    <td>   -0.0283</td> <td>    0.008</td> <td>   -3.733</td> <td> 0.000</td> <td>   -0.043</td> <td>   -0.013</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Fare</th>   <td>    0.0004</td> <td>    0.002</td> <td>    0.190</td> <td> 0.849</td> <td>   -0.004</td> <td>    0.004</td>\n",
       "</tr>\n",
       "</table>"
      ],
      "text/latex": [
       "\\begin{center}\n",
       "\\begin{tabular}{lclc}\n",
       "\\toprule\n",
       "\\textbf{Dep. Variable:}   &     Survived     & \\textbf{  No. Observations:  } &      801    \\\\\n",
       "\\textbf{Model:}           &      Logit       & \\textbf{  Df Residuals:      } &      796    \\\\\n",
       "\\textbf{Method:}          &       MLE        & \\textbf{  Df Model:          } &        4    \\\\\n",
       "\\textbf{Date:}            & Sun, 21 Sep 2025 & \\textbf{  Pseudo R-squ.:     } &   0.3076    \\\\\n",
       "\\textbf{Time:}            &     19:39:05     & \\textbf{  Log-Likelihood:    } &   -368.84   \\\\\n",
       "\\textbf{converged:}       &       True       & \\textbf{  LL-Null:           } &   -532.70   \\\\\n",
       "\\textbf{Covariance Type:} &    nonrobust     & \\textbf{  LLR p-value:       } & 1.129e-69   \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "\\begin{tabular}{lcccccc}\n",
       "                & \\textbf{coef} & \\textbf{std err} & \\textbf{z} & \\textbf{P$> |$z$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n",
       "\\midrule\n",
       "\\textbf{const}  &       4.4221  &        0.526     &     8.412  &         0.000        &        3.392    &        5.452     \\\\\n",
       "\\textbf{Pclass} &      -1.1063  &        0.141     &    -7.855  &         0.000        &       -1.382    &       -0.830     \\\\\n",
       "\\textbf{Sex}    &      -2.5587  &        0.195     &   -13.092  &         0.000        &       -2.942    &       -2.176     \\\\\n",
       "\\textbf{Age}    &      -0.0283  &        0.008     &    -3.733  &         0.000        &       -0.043    &       -0.013     \\\\\n",
       "\\textbf{Fare}   &       0.0004  &        0.002     &     0.190  &         0.849        &       -0.004    &        0.004     \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "%\\caption{Logit Regression Results}\n",
       "\\end{center}"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                           Logit Regression Results                           \n",
       "==============================================================================\n",
       "Dep. Variable:               Survived   No. Observations:                  801\n",
       "Model:                          Logit   Df Residuals:                      796\n",
       "Method:                           MLE   Df Model:                            4\n",
       "Date:                Sun, 21 Sep 2025   Pseudo R-squ.:                  0.3076\n",
       "Time:                        19:39:05   Log-Likelihood:                -368.84\n",
       "converged:                       True   LL-Null:                       -532.70\n",
       "Covariance Type:            nonrobust   LLR p-value:                 1.129e-69\n",
       "==============================================================================\n",
       "                 coef    std err          z      P>|z|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------\n",
       "const          4.4221      0.526      8.412      0.000       3.392       5.452\n",
       "Pclass        -1.1063      0.141     -7.855      0.000      -1.382      -0.830\n",
       "Sex           -2.5587      0.195    -13.092      0.000      -2.942      -2.176\n",
       "Age           -0.0283      0.008     -3.733      0.000      -0.043      -0.013\n",
       "Fare           0.0004      0.002      0.190      0.849      -0.004       0.004\n",
       "==============================================================================\n",
       "\"\"\""
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "results = sm.Logit(y_train, X_train).fit()\n",
    "results.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "e628ae6b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-21T19:39:05.144641Z",
     "iopub.status.busy": "2025-09-21T19:39:05.144299Z",
     "iopub.status.idle": "2025-09-21T19:39:05.150073Z",
     "shell.execute_reply": "2025-09-21T19:39:05.149203Z"
    },
    "papermill": {
     "duration": 0.013633,
     "end_time": "2025-09-21T19:39:05.151528",
     "exception": false,
     "start_time": "2025-09-21T19:39:05.137895",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "y_predict = results.predict(X_test).round(0).astype(int)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "88283850",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-21T19:39:05.162919Z",
     "iopub.status.busy": "2025-09-21T19:39:05.162427Z",
     "iopub.status.idle": "2025-09-21T19:39:05.348599Z",
     "shell.execute_reply": "2025-09-21T19:39:05.347662Z"
    },
    "papermill": {
     "duration": 0.193259,
     "end_time": "2025-09-21T19:39:05.349935",
     "exception": false,
     "start_time": "2025-09-21T19:39:05.156676",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.8555555555555555\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "cm = confusion_matrix(y_test, y_predict)\n",
    "sns.heatmap(cm, cmap=\"YlGnBu\", annot=True, fmt='g')\n",
    "print((cm[0,0]+cm[1,1])/cm.sum())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "a351f4d7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-21T19:39:05.361753Z",
     "iopub.status.busy": "2025-09-21T19:39:05.361484Z",
     "iopub.status.idle": "2025-09-21T19:39:05.374544Z",
     "shell.execute_reply": "2025-09-21T19:39:05.373739Z"
    },
    "papermill": {
     "duration": 0.020235,
     "end_time": "2025-09-21T19:39:05.375719",
     "exception": false,
     "start_time": "2025-09-21T19:39:05.355484",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df_sub = pd.read_csv(\"/kaggle/input/titanic/test.csv\")\n",
    "df_sub[\"Sex\"] = df_sub[\"Sex\"].map({\"male\":1, \"female\":0})\n",
    "df_sub[\"Age\"] = df_sub[\"Age\"].fillna(df_sub[\"Age\"].mean().round(0))\n",
    "df_sub[\"Fare\"] = df_sub[\"Fare\"].fillna(df_sub[\"Fare\"].mean())\n",
    "df_submission = df_sub[features]\n",
    "df_final = df_sub[[\"PassengerId\"]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "b3fe2c64",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-21T19:39:05.387680Z",
     "iopub.status.busy": "2025-09-21T19:39:05.387414Z",
     "iopub.status.idle": "2025-09-21T19:39:05.395156Z",
     "shell.execute_reply": "2025-09-21T19:39:05.394385Z"
    },
    "papermill": {
     "duration": 0.015137,
     "end_time": "2025-09-21T19:39:05.396456",
     "exception": false,
     "start_time": "2025-09-21T19:39:05.381319",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X_submission = sm.add_constant(df_submission)\n",
    "df_final[\"Survived\"] = results.predict(X_submission).round(0).astype(int)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "7c1a3e45",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-21T19:39:05.408609Z",
     "iopub.status.busy": "2025-09-21T19:39:05.408345Z",
     "iopub.status.idle": "2025-09-21T19:39:05.418041Z",
     "shell.execute_reply": "2025-09-21T19:39:05.417214Z"
    },
    "papermill": {
     "duration": 0.017736,
     "end_time": "2025-09-21T19:39:05.419577",
     "exception": false,
     "start_time": "2025-09-21T19:39:05.401841",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df_final.to_csv(\"/kaggle/working/\" + \"submission.csv\", index=False)"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "databundleVersionId": 26502,
     "isSourceIdPinned": false,
     "sourceId": 3136,
     "sourceType": "competition"
    }
   ],
   "dockerImageVersionId": 31089,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 12.939291,
   "end_time": "2025-09-21T19:39:06.145228",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-09-21T19:38:53.205937",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
